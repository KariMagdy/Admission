<%
 require 'google_chart'
%>
<div align="center">

<%= select_tag "semester_sel2", options_from_collection_for_select(Semester.all, :id, :name) %>

<script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
    
    
    var submit,save,close,reject,accept=0
    
      // Load the Visualization API and the piechart package.
      google.load('visualization', '1.0', {'packages':['corechart']});
      
      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawChart);


      // Callback that creates and populates a data table, 
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChart() {

      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Topping');
      data.addColumn('number', 'Slices');
      
      data.addRows([
        ['Approved', parseFloat(accept)],
        ['Submitted', parseFloat(submit)],
        ['Rejected', parseFloat(reject)], 
        ['Saved', parseFloat(save)],
        ['Closed', parseFloat(close)]
      ]);

      // Set chart options
      var options = {'title':'Applicants Status',
                     'width':400,
                     'height':200};

      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
      chart.draw(data, options);
     
    }
 $(document).ready(function() {
  return $("#semester_sel2").change(changeSemester2).trigger("change");
});

    
changeSemester2 = function() {
  var url;
  url = void 0;
  url = "/applicants/get_semester?sem=" + $(this).val();
  return $.getJSON(url, function(data) {
    console.log(data);
    accept=data['approved']
    reject=data['rejected']
    submit=data['submitted']
    save=data['saved']
    close=data['closed']
    drawChart()
    //$('#all_apps').html(data['all']);
    //$('#saved_apps').html(data['saved']);
    //$('#submitted_apps').html(data['submitted']);
    //$('#approved_apps').html(data['approved']);
    //$('#rejected_apps').html(data['rejected']);
    //return $('#closed_apps').html(data['closed']);
  });
};

</script>

<div id="chart_div" style="width:400; height:300"></div>


&nbsp;&nbsp;&nbsp;
<%
approved_applicants = []
Semester.all.each do |s|
approved = Applicant.joins(:admission_information).where(:applicants => {:status => "Approved"}, :admission_informations => { :semester_id =>  s.id}).readonly(false).count
approved_applicants<<approved
end
semesters=[] #array contains all semesters
Semester.all.each do |s|
semesters<<s.name
end

bar_1_data = [approved_applicants.max*5] #approved applicants in the each semester
color_1 = 'ffffff'
color_2 = '1BBB0A'

GoogleChart::BarChart.new("400x200", "Approved Applicants per Semester", :vertical, false) do |bc|
  
  bc.data "secondResultBar", approved_applicants, color_2
  bc.data "FixingProblem", bar_1_data, color_1 #Omnia put this to fix the problem that the largest value hits the top of the y axis
  bc.axis :x, :labels => semesters, :font_size => 10,:alignment => :center
  bc.axis :y, :range => [0,approved_applicants.max*5], :alignment => :center
  bc.show_legend = false
  bc.stacked = true
  bc.data_encoding = :extended
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 0, :data_point_index => -1, :pixel_size => 9
  bc.width_spacing_options :bar_width => 25, :bar_spacing => 70, :group_spacing => 100

  @bar_graph = bc.to_url
end

%>
<%= image_tag(@bar_graph) %>

</div>

