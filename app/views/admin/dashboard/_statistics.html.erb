<%
 require 'google_chart'
%>
<table width="100%">	
<tr>
<td width="50%">
<p style="font-size: 14px; font-weight:bold">Select Semester to veiw: &nbsp;<%= select_tag "semester_sel2", options_from_collection_for_select(Semester.all, :id, :name) %></p>

<script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
    
    
    var submit,save,close,reject,accept=0
    
      // Load the Visualization API and the piechart package.
      google.load('visualization', '1.0', {'packages':['corechart']});
      
      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawChart);


      // Callback that creates and populates a data table, 
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChart() {

      // Create the data table.
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Topping');
      data.addColumn('number', 'Slices');
      
      data.addRows([
        ['Approved', parseFloat(accept)],
        ['Submitted', parseFloat(submit)],
        ['Rejected', parseFloat(reject)], 
        ['Saved', parseFloat(save)],
        ['Closed', parseFloat(close)]
      ]);

      // Set chart options
      var options = {'title':'Applicants Status',
                     'width':550,
                     'height':200};

      // Instantiate and draw our chart, passing in some options.
      var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
      chart.draw(data, options);
     
    }
 $(document).ready(function() {
  return $("#semester_sel2").change(changeSemester2).trigger("change");
});

    
changeSemester2 = function() {
  var url;
  url = void 0;
  url = "/applicants/get_semester?sem=" + $(this).val();
  return $.getJSON(url, function(data) {
    console.log(data);
    accept=data['approved']
    reject=data['rejected']
    submit=data['submitted']
    save=data['saved']
    close=data['closed']
    drawChart()
    //$('#all_apps').html(data['all']);
    //$('#saved_apps').html(data['saved']);
    //$('#submitted_apps').html(data['submitted']);
    //$('#approved_apps').html(data['approved']);
    //$('#rejected_apps').html(data['rejected']);
    //return $('#closed_apps').html(data['closed']);
  });
};

</script>
<div id="chart_div" style="width:400; height:200; padding-top: 10px;"></div>
</td>

<td width="50%">
<p style="font-size: 14px; font-weight:bold">Number of Approved Applicants per Semester</p>
<br />
<%
approved_applicants = []
Semester.all.each do |s|
approved = Applicant.joins(:admission_information).where(:applicants => {:status => "Approved"}, :admission_informations => { :semester_id =>  s.id}).readonly(false).count
approved_applicants<<approved
end
semesters=[] #array contains all semesters
Semester.all.each do |s|
semesters<<s.name
end

bar_1_data = [approved_applicants.max.to_i+50] #approved applicants in the each semester
color_1 = 'ffffff'
color_2 = '1BBB0A'

GoogleChart::BarChart.new("550x200", "Approved Applicants per Semester", :vertical, false) do |bc|
  
  bc.data "Approved Applicants", approved_applicants, color_2
  bc.data nil, bar_1_data, color_1 #Omnia put this to fix the problem that the largest value hits the top of the y axis
  bc.axis :x, :labels => semesters, :font_size => 10,:alignment => :center
  bc.axis :y, :range => [0,approved_applicants.max.to_i+50], :alignment => :center
  bc.show_legend = true
  bc.stacked = true
  bc.data_encoding = :extended
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 0, :data_point_index => -1, :pixel_size => 9
  bc.width_spacing_options :bar_width => 20, :bar_spacing => 70, :group_spacing => 100

  @bar_graph = bc.to_url
end

%>
<%= image_tag(@bar_graph) %>

</td>
</tr>
<tr>
<td width="50%">
<p style="font-size: 14px; font-weight:bold">Applicants TOEFL Results per Semester</p>

<%
lessthanfivehundred_applicants = []
Semester.all.each do |s|
lessthanfivehundred = Applicant.all(:conditions=>["toefl_test_results< ?  AND semester_id = ?",500,s.id], :joins => :admission_information).count
lessthanfivehundred_applicants<<lessthanfivehundred
end
between_applicants = []
Semester.all.each do |s|
between = Applicant.all(:conditions=>["toefl_test_results< ? AND toefl_test_results >? AND semester_id = ?",600,500,s.id], :joins => :admission_information).count
between_applicants<<between
end
greaterthansixhundred_applicants = []
Semester.all.each do |s|
greaterthansixhundred = Applicant.all(:conditions=>["toefl_test_results >? AND semester_id = ?",600,s.id], :joins => :admission_information).count
greaterthansixhundred_applicants<<greaterthansixhundred
end
semesters=[] #array contains all semesters
Semester.all.each do |s|
semesters<<s.name
end
#@lessthanfivehundred=Applicant.all(:conditions=>["toefl_test_results<?", 500], :joins => :admission_information).count
#@between = Applicant.all(:conditions=>["toefl_test_results< ? AND toefl_test_results >?",600,500], :joins => :admission_information).count
#@gretaerthansixhundred=Applicant.all(:conditions=>["toefl_test_results>?", 600], :joins => :admission_information).count

bar_2_data = [between_applicants.max.to_i+50] #approved applicants in the each semester
color_2 = 'ffffff'
color_1 = '1BBB0A'
color_3 = '1892A4'
color_4 = 'FBED0B'

GoogleChart::BarChart.new("550x200", "TOFEL Results", :vertical, false) do |bc|
  bc.data "Less than 500", lessthanfivehundred_applicants,color_1
  bc.data "500-600", between_applicants, color_3
  bc.data "Greater than 600", greaterthansixhundred_applicants, color_4
  bc.data nil, bar_2_data, color_2 #Omnia put this to fix the problem that the largest value hits the top of the y axis
  bc.axis :x, :labels => semesters, :font_size => 10
  bc.axis :y, :range => [0,between_applicants.max.to_i+50], :alignment => :center
  bc.show_legend = true
  bc.stacked = false
  bc.data_encoding = :extended
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 0, :data_point_index => -1, :pixel_size => 9
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 1, :data_point_index => -1, :pixel_size => 9
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 2, :data_point_index => -1, :pixel_size => 9  
  bc.width_spacing_options :bar_width => 18, :bar_spacing => 5, :group_spacing => 17

  @bar_graph2 = bc.to_url
end
%>
<%= 
image_tag(@bar_graph2)
%>
</td>
<td width="50%"> 
<p style="font-size: 14px; font-weight:bold">Applicants Transportation method per Semester</p>

	
<%
private_applicants = []
Semester.all.each do |s|
privatetrans = Applicant.joins(:admission_information).where(:applicants => {:transportation => "Private"}, :admission_informations => { :semester_id =>  s.id}).readonly(false).count
private_applicants<<privatetrans
end
bus_applicants = []
Semester.all.each do |s|
bustrans = Applicant.joins(:admission_information).where(:applicants => {:transportation => "Nu buses"}, :admission_informations => { :semester_id =>  s.id}).readonly(false).count
bus_applicants<<bustrans
end
semesters=[] #array contains all semesters
Semester.all.each do |s|
semesters<<s.name
end

#@a = Applicant.where(:applicants => {:transportation => "Private"}).count
#@b = Applicant.where(:applicants => {:transportation => "Nu buses"}).count
bar_1_data = [@a,@b]
bar_2_data = [private_applicants.max.to_i+50] #approved applicants in the each semester
color_2 = 'ffffff'
color_1 = '1BBB0A'
color_3 = '1892A4'

GoogleChart::BarChart.new("550x200", "Transportation", :vertical, false) do |bc|
  
  bc.data "Private", private_applicants, color_1
  bc.data "NU Bus",bus_applicants ,color_3
  bc.data nil, bar_2_data, color_2 #Omnia put this to fix the problem that the largest value hits the top of the y axis
  
  bc.axis :x, :labels => semesters, :font_size => 10
  bc.axis :y, :range => [0,private_applicants.max.to_i+50], :alignment => :center
  bc.show_legend = true
  bc.stacked = false
  bc.data_encoding = :extended
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 0, :data_point_index => -1, :pixel_size => 9
  bc.shape_marker :diamond, :color => '375134', :data_set_index => 1, :data_point_index => -1, :pixel_size => 9
  bc.width_spacing_options :bar_width => 18, :bar_spacing => 5, :group_spacing => 20

  @bar_graph3 = bc.to_url
end

%>
<%= image_tag(@bar_graph3) %> 
</td>
</tr>
<tr>
<td colspan="2">
<center><p style="font-size: 14px; font-weight:bold">Number of Approved Applicants per Program per Semester</p></center>

<%

programs={}

Semester.all.each do |s|
	School.all.each do |p|
		if programs[p.name].nil?
			programs[p.name]=[Applicant.joins(:admission_information).where(:applicants => {:status => "Approved"}, :admission_informations => { :semester_id =>  s.id, :school_id => p.id}).readonly(false).count]
		else
			programs[p.name]<<Applicant.joins(:admission_information).where(:applicants => {:status => "Approved"}, :admission_informations => { :semester_id =>  s.id, :school_id => p.id}).readonly(false).count
		end
	end
end

semesters=[] #array contains all semesters
Semester.all.each do |s|
semesters<<s.name
end
#@lessthanfivehundred=Applicant.all(:conditions=>["toefl_test_results<?", 500], :joins => :admission_information).count
#@between = Applicant.all(:conditions=>["toefl_test_results< ? AND toefl_test_results >?",600,500], :joins => :admission_information).count
#@gretaerthansixhundred=Applicant.all(:conditions=>["toefl_test_results>?", 600], :joins => :admission_information).count

bar_2_data = [between_applicants.max.to_i+50] #approved applicants in the each semester
color_2 = 'ffffff'
color_1 = '1BBB0A'
color_3 = '1892A4'
color_4 = 'FBED0B'
colors=[color_1,color_3,color_4, 'ABED0B', 'CBEA0B','F75D07','1DB4D2','3BED6B','53ED00','7BE40B','9BE764','FBED0B','222222','FBED02','FBED0B','222222','FBED0B','FBED0B','FBED0B','FBED0B']

logger.debug "HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE!!!!!!!!!!!!!!!!!!!!!!!!!!"
logger.debug programs

GoogleChart::BarChart.new("1000x300", "Approved Applicants per Program per Semester", :vertical, false) do |bc|
i=0
  programs.each do |key, value|
  	bc.data key, value ,colors[i]
  	i=i+1
  	if i>=colors.length
  		i=0
  	end
  end	
  	#bc.data "Less than 500", lessthanfivehundred_applicants,color_1
  	#bc.data "500-600", between_applicants, color_3
  	#bc.data "Greater than 600", greaterthansixhundred_applicants, color_4
  bc.data nil, bar_2_data, color_2 #Omnia put this to fix the problem that the largest value hits the top of the y axis
  bc.axis :x, :labels => semesters, :font_size => 10
  bc.axis :y, :range => [0,between_applicants.max.to_i+50], :alignment => :center
  bc.show_legend = true
  bc.stacked = false
  bc.data_encoding = :extended
  
  School.all.each do |s|
  	bc.shape_marker :diamond, :color => '375134', :data_set_index => s.id - 1, :data_point_index => -1, :pixel_size => 4
  end
	
  bc.width_spacing_options :bar_width => 8, :bar_spacing => 3, :group_spacing => 10
  @bar_graph8 = bc.to_url
end
%>
<center>
<%= 
image_tag(@bar_graph8)
%>
</center>
</td>
</tr>
</table>
